module ALU_Control(ALUop,FunctionCode,ALUctr);
	input [1:0] ALUop; //sinal da unidade de controle sobre o opcode da instrução
	input [5:0] FunctionCode; //A 6-digit function code
	output reg [3:0] ALUctr; //The output is a 4-bit ALU control signal
 
	always @(ALUop,FunctionCode) begin
		case(ALUop)
			2'b00: ALUctr <= 4'b0010; //Fetch, save, add
			2'b01: ALUctr <= 4'b0110; //Equal branch, minus
			//R type
			2'b10:
				begin
					case(FunctionCode)
						6'b100000: ALUctr <= 4'b0010; //plus
						6'b100010: ALUctr <= 4'b0110; //Less
						6'b100100: ALUctr <= 4'b0000; //versus
						6'b100101: ALUctr <= 4'b0001; //or
						default: ALUctr <= 4'b1111;
					endcase
				end
			default: ALUctr <= 4'b1111;
		endcase
	end
endmodule